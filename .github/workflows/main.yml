name: CI
on: [push,pull_request]

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        choiceL: [--disable-silent-rules]
    steps:
      - uses: actions/checkout@v2
      - name: Create configure
        run: |
          sudo apt-get update -y
          sudo apt-get install autoconf automake libtool gcc libfftw3-dev libgimp2.0-dev
          autoreconf -i
          automake
      - name: Choose configure
        run: ./configure ${{ matrix.choiceL }} --bindir=/usr/lib/gimp/2.0/plug-ins
      - name: Make fourier plugin
        run: make
      - name: Strip Debug Symbols
        run: make strip
      - name: Test user-level install/uninstall
        if: matrix.choiceL == '--disable-silent-rules'
        run: |
          make install-user
          make uninstall-user
      - name: Test make distcheck
        if: matrix.choiceL == '--disable-silent-rules'
        run: make distcheck
      - name: Test make install GIMP shared plugin
        if: matrix.choiceL == '--disable-silent-rules'
        run: |
          sudo make install
          sudo make uninstall
      - name: Build deb package
        run: make clean && ./configure && make deb && cp ../gimp-plugin-fourier_* .
      - name: Build dist
        run: ./configure && make dist
      - uses: actions/upload-artifact@v2
        with:
          name: fourier_gimp${{ env.GIMPVER }}_${{ matrix.version }}
          path: |
            gimp-plugin-fourier_*
            fourier-*.tar.gz
  win:
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        include: [
          {msystem: MINGW32, toolchain: mingw-w64-i686, version: x32 },
          {msystem: MINGW64, toolchain: mingw-w64-x86_64, version: x64 },
        ]
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - name: Install msys2 build environment
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.msystem }}
        update: false
        install: base-devel git ${{ matrix.toolchain }}-toolchain ${{ matrix.toolchain }}-gimp ${{ matrix.toolchain }}-fftw 

    - run: git config --global core.autocrlf input
      shell: bash

    - uses: actions/checkout@v2

    - name: Build plugin
      shell: msys2 {0}
      run: |
        echo $(gimptool-2.0 -n --build fourier.c) -lfftw3 -O3 | sh
        cp `which libfftw3-3.dll` .

    - name: Get GIMP version
      shell: msys2 {0}
      run: echo "GIMPVER=$(pacman -Q  ${{ matrix.toolchain }}-gimp | cut -d ' ' -f 2)" >> $GITHUB_ENV

    - uses: actions/upload-artifact@v2
      with:
        name: fourier_gimp${{ env.GIMPVER }}_${{ matrix.version }}
        path: |
          ./fourier.exe
          ./libfftw3-3.dll
